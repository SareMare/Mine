.686 ; сборка инструкций дл€ процессора Pentium Pro (только 32-разр€дный MASM) 

.model flat, C  ; определение модели пам€ти 

 

option casemap: none ; задаем различи€ в регистрах имЄн и ключевых слов 

 

; использование файлов библиотек 

include C:\masm32\include\windows.inc  

include C:\masm32\include\kernel32.inc  

includelib kernel32.lib  

 

.Data ; определение данных программы 

handleFile DWORD ?  

bytesRead DWORD ?  

buff BYTE 500 DUP(?) ; буфер 

 

.Code ; основной код - описание процедур 

 

Read_file proc C fileName: DWORD, len: DWORD ; DWORD Ч 32-битное беззнаковое целое  

; выдел€ет и при необходимости инициализирует двойное слово (4 байта) хранилища дл€ каждого инициализатора 

 

; инструкци€ push помещает значение из указанного регистра в стек и уменьшает указатель стека на соответствующую величину 

push ebp  

push esp  

 

mov eax, fileName  

; создает или открывает каталог, физический диск и т.д., возвращает дескриптор, который может быть использован дл€ доступа к объекту 

; им€ файла / режим доступа / совместный доступ / SD (дескр. защиты) / как действовать / атрибуты файла / дескр.шаблона файла 

invoke CreateFile, eax, GENERIC_READ, NULL, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, 0  

 

mov handleFile, eax  

 

; читает данные из файла, начина€ с позиции, обозначенной указателем файла, после этого указатель файла перемещаетс€ на число действительно прочитанных байтов 

; дескриптор файла / буфер данных / число байтов дл€ чтени€ / число прочитанных байтов / асинхронный буфер  

invoke ReadFile, handleFile, addr buff, len, addr bytesRead, 0  

 

; закрывает дескриптор открытого объекта 

; дескриптор объекта 

invoke CloseHandle, handleFile 

 

mov eax, offset buff ; позвол€ет получить значение смещени€ выражени€ в байтах относительно начала того сегмента, в котором выражение определено 

 

; инструкци€ pop увеличивает указатель стека, берет значение из стека и помещает его в указанный регистр 

pop esp  

pop ebp  

 

ret ; выполн€ет возврат из процедуры 

 

Read_file EndP  

 

End 